pipeline {
    agent any

    environment {
        imageName = 'newswebsite:latest' // Define the image name here
    }

    stages {
        stage('Checkout SCM') {
            steps {
                echo 'Checking out the repository...'
                git url: 'https://github.com/chauhanpranay19/NewsWebsite.git', branch: 'main'
            }
        }

        stage('Test') {
            steps {
                echo 'Running tests...'
                // Add your actual test commands here, for example:
                // bat 'npm install && npm test'  // if you're using npm for JavaScript testing
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "Building Docker image ${imageName}..."
                    bat "docker build -t ${imageName} . || echo 'Docker build failed.'"
                }
            }
        }

        stage('Deploy Docker Container') {
            steps {
                script {
                    echo 'Stopping and removing existing container newswebsite_container if it exists...'
                    bat '''
                    docker ps -q --filter name=newswebsite_container | findstr . && docker stop newswebsite_container || echo "No running container to stop"
                    docker ps -a -q --filter name=newswebsite_container | findstr . && docker rm newswebsite_container || echo "No container to remove"
                    '''

                    echo "Deploying Docker container newswebsite_container..."
                    bat "docker run -d --name newswebsite_container -p 80:80 ${imageName} || echo 'Docker run failed.'"
                }
            }
        }
    }

    post {
        always {
            script {
                echo 'Pipeline completed. Cleaning up...'
                // Any additional cleanup logic can be added here.
            }
        }

        failure {
            echo 'Pipeline failed.'
        }
    }
}
