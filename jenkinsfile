pipeline {
    agent any

    environment {
        imageName = 'newswebsite:latest' // Define the Docker image name
        mavenHome = 'C:\\path\\to\\your\\maven' // Adjust this to your Maven installation path
        terraformDir = 'C:\\path\\to\\your\\terraform\\directory' // Directory containing Terraform scripts
    }

    stages {
        stage('Checkout SCM') {
            steps {
                git url: 'https://github.com/chauhanpranay19/NewsWebsite.git', branch: 'main'
            }
        }

        stage('Test') {
            steps {
                echo 'Running tests...'
                // Add your test commands here
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "Building Docker image ${imageName}..."
                    bat "docker build -t ${imageName} . || echo 'Docker build failed.'"
                }
            }
        }

        stage('Deploy Docker Container') {
            steps {
                script {
                    echo 'Stopping and removing existing container if it exists...'
                    bat '''
                    docker ps -q --filter name=newswebsite_container | findstr . && docker stop newswebsite_container || echo No running container to stop
                    docker ps -a -q --filter name=newswebsite_container | findstr . && docker rm newswebsite_container || echo No container to remove
                    '''
                    echo "Deploying Docker container..."
                    bat "docker run -d --name newswebsite_container -p 80:80 ${imageName} || echo 'Docker run failed.'"
                }
            }
        }

        stage('Deploy ELK Stack') {
            steps {
                script {
                    echo 'Deploying ELK stack...'
                    dir("${terraformDir}") {
                        bat "terraform apply -auto-approve -state=elk.tfstate || echo 'ELK stack deployment failed.'"
                    }
                }
            }
        }

        stage('Run Maven Tests') {
            steps {
                script {
                    echo 'Running Selenium UI/UX tests with Maven...'
                    bat "${mavenHome}\\bin\\mvn test || echo 'Maven tests failed.'"
                }
            }
        }
    }

    post {
        always {
            script {
                echo 'Cleaning up...'
                // You can add cleanup actions here if needed.
            }
        }
    }
}
