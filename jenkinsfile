pipeline {
    agent any

    environment {
        imageName = 'newswebsite:latest' // Define the image name here
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }
        stage('Test') {
            steps {
                echo 'Running tests...'
                // Add your test commands here
            }
        }
        stage('Build Docker Image') {
            steps {
                echo "Building Docker image ${imageName}..."
                script {
                    // Use double quotes to expand the variable
                    bat "docker build -t ${imageName} . || echo 'Docker build failed.'"
                }
            }
        }
        stage('Deploy Docker Container') {
            steps {
                echo 'Stopping and removing existing container newswebsite_container if it exists...'
                script {
                    bat '''
                    docker ps -q --filter name=newswebsite_container | findstr . && docker stop newswebsite_container || echo No running container to stop
                    docker ps -a -q --filter name=newswebsite_container | findstr . && docker rm newswebsite_container || echo No container to remove
                    '''
                    echo "Deploying Docker container newswebsite_container..."
                    bat "docker run -d --name newswebsite_container -p 80:80 ${imageName} || echo 'Docker run failed.'"
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            script {
                // Add cleanup steps if necessary
            }
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
